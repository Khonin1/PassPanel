#!/usr/bin/env python3
import lgpio
import serial
import csv
import os
import time

RS485_ENABLE_PIN = 4  # BCM-–ø–∏–Ω –¥–ª—è RS485 DE
CSV_FILE = "data_log.csv"  # –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö

# –û—Ç–∫—Ä—ã–≤–∞–µ–º GPIO-—á–∏–ø (–æ–±—ã—á–Ω–æ 0 –Ω–∞ Raspberry Pi)
h = lgpio.gpiochip_open(0)

# –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –ø–∏–Ω –∫–∞–∫ –≤—ã—Ö–æ–¥
lgpio.gpio_claim_output(h, RS485_ENABLE_PIN)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º LOW –¥–ª—è —Ä–µ–∂–∏–º–∞ –ø—Ä–∏—ë–º–∞
lgpio.gpio_write(h, RS485_ENABLE_PIN, 0)

# –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ—Ä—Ç
ser = serial.Serial("/dev/ttyS0", 9600, timeout=1)

# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV
def load_csv_data():
    if not os.path.exists(CSV_FILE):
        return set()
    with open(CSV_FILE, newline='', encoding='utf-8') as file:
        reader = csv.reader(file)
        return {row[0] for row in reader}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ CSV
def save_to_csv(data):
    with open(CSV_FILE, "a", newline='', encoding='utf-8') as file:
        writer = csv.writer(file)
        writer.writerow([data])

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
known_data = load_csv_data()

print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å RS485...")

try:
    while True:
        try:
            received_data = ser.read(ser.in_waiting or 1)
            if received_data:
                hex_data = received_data.hex()
                print(f"üì• –ü–æ–ª—É—á–µ–Ω–æ: {hex_data}")

                if hex_data in known_data:
                    print("‚úÖ –î–∞–Ω–Ω—ã–µ —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ.")
                else:
                    print("üÜï –ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ! –î–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É...")
                    save_to_csv(hex_data)
                    known_data.add(hex_data)

            time.sleep(0.1)

        except serial.SerialException as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞–±–æ—Ç—ã —Å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º –ø–æ—Ä—Ç–æ–º: {e}")
            time.sleep(1)

except KeyboardInterrupt:
    print("\nüö™ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã...")
    ser.close()
    lgpio.gpiochip_close(h)  # –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º GPIO

